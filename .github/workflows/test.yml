name: Build Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: '. -> target'

      - name: Install frontend dependencies
        working-directory: ./ui
        run: npm ci

      - name: Build frontend
        working-directory: ./ui
        run: npm run build

      - name: Install Tauri CLI
        run: cargo install tauri-cli --version "^2.0" --locked

      - name: Build Tauri app bundles
        run: cargo tauri build

      - name: Upload Windows MSI
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: wecom-multi-open-windows-msi
          path: target/release/bundle/msi/*.msi

      - name: Upload Windows NSIS
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: wecom-multi-open-windows-nsis
          path: target/release/bundle/nsis/*.exe
        continue-on-error: true

      - name: Upload macOS DMG
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: wecom-multi-open-macos-dmg
          path: target/release/bundle/dmg/*.dmg

      - name: Upload macOS App
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: wecom-multi-open-macos-app
          path: target/release/bundle/macos/*.app
