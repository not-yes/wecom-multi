name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: wecom-multi-open-windows.exe
            binary_name: wecom-multi-open.exe

          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: wecom-multi-open-macos-intel
            binary_name: wecom-multi-open

          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: wecom-multi-open-macos-m1
            binary_name: wecom-multi-open

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache target directory
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-${{ matrix.target }}-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Rename binary (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          mv target/${{ matrix.target }}/release/${{ matrix.binary_name }} ${{ matrix.artifact_name }}

      - name: Rename binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          move target\${{ matrix.target }}\release\${{ matrix.binary_name }} ${{ matrix.artifact_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Get version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          files: |
            wecom-multi-open-windows.exe/wecom-multi-open-windows.exe
            wecom-multi-open-macos-intel/wecom-multi-open-macos-intel
            wecom-multi-open-macos-m1/wecom-multi-open-macos-m1
          body: |
            ## 企业微信多开工具 v${{ steps.version.outputs.version }}

            ### 📦 下载

            **Windows 用户**:
            - 下载 `wecom-multi-open-windows.exe`
            - 双击运行或 `wecom-multi-open-windows.exe 3`

            **macOS Intel 用户**:
            - 下载 `wecom-multi-open-macos-intel`
            - 运行 `chmod +x wecom-multi-open-macos-intel && ./wecom-multi-open-macos-intel 3`

            **macOS M1/M2 用户**:
            - 下载 `wecom-multi-open-macos-m1`
            - 运行 `chmod +x wecom-multi-open-macos-m1 && ./wecom-multi-open-macos-m1 3`

            ### ✨ 功能

            - ✅ 支持 Windows 10/11
            - ✅ 支持 macOS (Intel/M1/M2)
            - ✅ 轻量级 (< 2MB)
            - ✅ 零配置
            - ✅ 开源免费

            ### 📖 文档

            - [Windows 使用指南](https://github.com/${{ github.repository }}/blob/main/README.md)
            - [macOS 使用指南](https://github.com/${{ github.repository }}/blob/main/MACOS_GUIDE.md)
            - [编译指南](https://github.com/${{ github.repository }}/blob/main/BUILD_GUIDE.md)

            ### 📝 更新内容

            查看 [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)

            ---

            **首次使用建议启动 2-3 个实例测试**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
